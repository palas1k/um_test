"""init

Revision ID: e547a9c87121
Revises: None
Create Date: 2024-10-24 17:48:19.621408

"""
import os

import sqlalchemy as sa
from alembic import context
from alembic import op
from loguru import logger

from src.config import get_config
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e547a9c87121'
down_revision = None

cfg = get_config()

def upgrade():
    op.execute('CREATE SCHEMA IF NOT EXISTS __alembic_schema')
    op.execute('CREATE SCHEMA IF NOT EXISTS ege_schema')

    schema_upgrades()
    # x-flag for data
    if context.get_x_argument(as_dictionary=True).get("data", None):
        data_upgrades()

    logger.info("Migration complete [OK]")


def downgrade():
    data_downgrades()
    schema_downgrades()

def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('score',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('telegram_id', sa.String(), nullable=False),
    sa.Column('scores', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='ege_schema'
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('last_name', sa.String(length=30), nullable=False),
    sa.Column('telegram_id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='ege_schema'
    )
    # ### end Alembic commands ###

def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user', schema='ege_schema')
    op.drop_table('score', schema='ege_schema')
    # ### end Alembic commands ###

def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    pass

def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    pass
